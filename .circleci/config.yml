# Javascript Node CircleCI 2.0 configuration file
#
# Do everything in the one machine (FOR DUBUG)
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - setup_remote_docker
      - checkout

      #
      # BUILD
      #

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # Throw in the other required packages
      - run: git clone https://github.com/Cyber4All/taxonomy.git
      - run: git clone https://github.com/Cyber4All/entity.git
      # Transpile to typescript
      - run: npm run build
      
      # build docker images
      - run: docker build -t cyber4all/db-interactor:$VERSION_NUM.$CIRCLE_BUILD_NUM -t cyber4all/db-interactor:latest -f "db-interactor/Dockerfile" .
      - run: docker build -t cyber4all/lo-suggestion:$VERSION_NUM.$CIRCLE_BUILD_NUM -t cyber4all/lo-suggestion:latest -f "lo-suggestion/Dockerfile" .

      #
      # TEST
      #

      # start local database via Docker image
      #- run: docker run -d -p 27017:27017 mongo
      # initialize database
      - run: node dist/db-setup/db-init.script.js
      - run: node dist/test/setup.script.js
      # start microservices
      - run: docker run -d -p 27016:27016 cyber4all/db-interactor:latest
      - run: docker run -d -p 27015:27015 cyber4all/lo-suggestion:latest
      - run: docker ps
      # run tests
      # TODO: circleci has some sort of test association
      - run: docker run circleci/node dist/test/db-interactor.tape.js
      - run: docker run circleci/node dist/test/lo-suggestion.tape.js

      #
      # DEPLOY
      #

      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      # TODO: set CI env variables with secinj account creds
      # push images to DockerHub
      - run: docker push cyber4all/db-interactor:$VERSION_NUM.$CIRCLE_BUILD_NUM
      - run: docker push cyber4all/db-interactor:latest
      # second push should be fast because repo already has all layers
      - run: docker push cyber4all/lo-suggestion:$VERSION_NUM.$CIRCLE_BUILD_NUM
      - run: docker push cyber4all/lo-suggestion:latest
      # second push should be fast because repo already has all layers

      # set up ssh key file
      - run: echo "$PEM_CONTENTS" > database-interaction.pem
      - run: chmod 600 database-interaction.pem
      # ssh into AWS instances and run necessary reboot commands
      - run: |
          ssh -i database-interaction.pem ec2-user@ec2-52-206-44-129.compute-1.amazonaws.com \
          "
            echo 'Pulling updated image from Docker Hub:';
            docker pull cyber4all/db-interactor:latest;
            echo 'Stopping old service:';
            docker stop \$(docker ps -a -q --filter ancestor=cyber4all/db-interactor:latest --format='{{.ID}}');
            echo 'Starting new service:'
            docker run -d -p 27016:27016 -e CLARK_DB_URI='$ATLAS_URI' cyber4all/db-interactor:latest;
          "
      - run: |
          ssh -i database-interaction.pem ec2-user@ec2-54-92-208-221.compute-1.amazonaws.com \
          "
            echo 'Pulling updated image from Docker Hub:';
            docker pull cyber4all/lo-suggestion:latest;
            echo 'Stopping old service:';
            docker stop \$(docker ps -a -q --filter ancestor=cyber4all/lo-suggestion:latest --format='{{.ID}}');
            echo 'Starting new service:'
            docker run -d -p 27015:27015 -e CLARK_DB_URI='$ATLAS_URI' cyber4all/lo-suggestion:latest;
          "
      # delete ssh key file (totally unnecessary but a good reminder it's not quite safe)
      - run: rm database-interaction.pem

