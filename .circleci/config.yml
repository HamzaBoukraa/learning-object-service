defaults: &defaults
  working_directory: ~/learning-object-service
  docker:
    - image: cyber4all/circleci-aws:docker-git
version: 2.1
orbs:
  newman: postman/newman@latest
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      # - run:
      #     name: Install Newman and Run Functional Tests
      #     command: |
      #       npm i
      #       sudo npm i -g newman
      #       npm start
      #       newman run Learning\ Object\ Service.postman_collection.json
      - run:
          name: Build Image & Unit Test
          command: | 
            docker build -t learning-object-service:$CIRCLE_SHA1 . --build-arg CLARK_DB_URI_TEST=$CLARK_DB_URI_TEST
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
      - run:
          name: Publish Image 
          command: |
            docker tag learning-object-service:$CIRCLE_SHA1 "${DOCKER_USER_ORG}/learning-object-service:${CIRCLE_SHA1}"
            docker push "${DOCKER_USER_ORG}/learning-object-service:${CIRCLE_SHA1}"
      - persist_to_workspace: 
          root: ./
          paths: 
              - ./package.json
              - ./deploy.sh

  newman-collection-run:
    <<: *defaults
    executor: newman/postman-newman-docker
    steps:
      - checkout
      - newman/newman-run:
          collection: ./Learning\ Object\ Service.postman_collection.json
              
  create-sentry-release:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Install Sentry CLI
          command: curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Create Sentry Release Object
          command: |
            export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            sentry-cli releases -p ${SENTRY_PROJECT_NAME} new ${SEMVER}
            sentry-cli releases -p ${SENTRY_PROJECT_NAME} set-commits --auto ${SEMVER}
            sentry-cli releases -p ${SENTRY_PROJECT_NAME} finalize ${SEMVER}

  deploy-production:
    <<: *defaults
    steps:
      - attach_workspace: 
          at: ~/learning-object-service
      - setup_remote_docker
      - run:
          name: Login to docker
          command: docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
      - run:
          name: Pull Image
          command: docker pull "${DOCKER_USER_ORG}/learning-object-service:${CIRCLE_SHA1}"
      - run:
          name: Publish Image 
          command: |
            export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            docker tag "${DOCKER_USER_ORG}/learning-object-service:${CIRCLE_SHA1}" "${DOCKER_USER_ORG}/learning-object-service:${SEMVER}"
            docker push "${DOCKER_USER_ORG}/learning-object-service:${SEMVER}"
      - run:
          name: Deploy to ECS
          command: |
            export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
            export DOCKER_IMAGE="${DOCKER_USER_ORG}/learning-object-service:${SEMVER}"
            chmod +x ./deploy.sh
            sh ./deploy.sh

workflows:
  version: 2.1
  build-test:
    jobs:
      - build:
          filters:
            branches:
              ignore: /master/
      - newman-collection-run:
          filters:
            branches:
              ignore: /master/

  build-test-create-sentry-release-and-deploy-production:
    jobs:
      - build:
          filters:
            branches:
              only: /master/
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: /master/
      - create-sentry-release:
          requires:
            - deploy-production
          filters:
            branches:
              only: /master/